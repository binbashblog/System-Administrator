# Ubuntu Server 18.04 LTS

#################################################
##### KEYBOARD LANGUAGE & REGIONAL SETTINGS #####
#################################################


d-i 	debian-installer/locale string en_GB.UTF-8
d-i 	console-setup/ask_detect boolean false
d-i	time/zone string UTC
d-i	debian-installer/splash boolean false
d-i     debian-installer/language string en
d-i     debain-installer/country string UK
d-i 	debian-installer/keymap select uk
d-i 	keyboard-configuration/xkb-keymap select en_GB
d-i 	keyboard-configuration/layout string United Kingdom

#################################################
############# NETWORK CONFIGURATION #############
#################################################

d-i 	netcfg/choose_interface select auto

# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
#d-i netcfg/disable_autoconfig boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#
# IPv4 example
#d-i netcfg/get_ipaddress string 192.168.3.12
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.3.1
#d-i netcfg/get_nameservers string 192.168.3.1 8.8.8.8
#d-i netcfg/confirm_static boolean true

d-i 	netcfg/get_hostname string preseeded-ubuntu
d-i 	netcfg/get_domain string ubuntu.local

#d-i netcfg/dhcp_hostname string ubuntu-server
# Disable that annoying WEP key dialog.
#d-i netcfg/wireless_wep string

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
d-i 	hw-detect/load_firmware boolean true


#################################################
################ MIRROR SETTINGS ################
#################################################


#d-i mirror/protocol string http
d-i 	mirror/country string manual
d-i 	mirror/http/hostname string archive.ubuntu.com
d-i 	mirror/http/directory string /ubuntu
d-i 	mirror/http/proxy string
d-i 	mirror/suite string bionic
d-i 	mirror/udeb/suite string bionic
d-i 	mirror/udeb/components multiselect main, restricted
### Account setup
d-i 	passwd/root-login boolean false
d-i 	passwd/user-fullname string
d-i 	passwd/username string ubuntu-user
### create a password with `printf "r00tme" | mkpasswd -s -m md5`
d-i 	passwd/user-password password changeme
d-i 	passwd/user-password-again password changeme

### Clock and time zone setup
d-i 	clock-setup/utc boolean true
d-i 	time/zone string Europe/London
d-i 	clock-setup/ntp boolean true
d-i 	clock-setup/ntp-server string uk.pool.ntp.org

### Partitioning using LVM ###

## Partitioning example
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
#d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/sda
# and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:
#d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition


d-i 	partman-auto/disk string /dev/sda
d-i 	partman-auto/method string lvm

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i 	partman-lvm/device_remove_lvm boolean true
d-i 	partman-lvm/device_remove_lvm_span boolean true

# The same applies to pre-existing software RAID array:
d-i 	partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i 	partman-lvm/confirm boolean true
d-i 	partman-auto/purge_lvm_from_device boolean true
# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
#d-i partman-auto/choose_recipe select atomic

# Or provide a recipe of your own...

d-i 	partman-auto-lvm/new_vg_name string rootvg

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .



d-i partman-auto/expert_recipe string                           \
        boot-root ::                                            \
                40 300 300 ext4                                 \
                        $primary{ }                             \
                        $bootable{ }                            \
                        method{ format } format{ }              \
                        use_filesystem{ } filesystem{ ext4 }    \
                        mountpoint{ /boot }                     \
                .                                               \
                2000 10000 1000000000 ext4 			\
                        $lvmok{ }		                \
                        method{ format } format{ }              \
                        use_filesystem{ } filesystem{ ext4 }    \
                        options/noatime{ noatime }              \
                        mountpoint{ / }                         \
                .     						\
		2000 1000 10000 ext4                     	\
                        $lvmok{ }                               \
                        method{ format } format{ }              \
                        use_filesystem{ } filesystem{ ext4 }    \
                        options/noatime{ noatime }              \
                        mountpoint{ /var }                      \
                .						\
                8000 8000 200% linux-swap 			\
                        $lvmok{ }		                \
                        method{ swap } format{ }                \
                .                                               \


# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i 	partman-partitioning/confirm_write_new_label boolean true
d-i 	partman/choose_partition select finish
d-i 	partman/confirm boolean true
d-i 	partman/confirm_nooverwrite boolean true


## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
d-i 	partman/mount_style select "label"

### Apt setup


#d-i 	apt-setup/backports boolean true
#d-i apt-setup/contrib boolean true
#d-i apt-setup/multiverse boolean true
#d-i apt-setup/non-free boolean true
#d-i apt-setup/proposed boolean true
d-i 	apt-setup/universe boolean true
#d-i 	apt-setup/restricted boolean true
# Enable deb-src lines
d-i 	apt-setup/services-select multiselect security, updates
d-i 	apt-setup/security_host string security.ubuntu.com
d-i 	apt-setup/security_path string /ubuntu

### Package selection
tasksel tasksel/first multiselect standard, ubuntu-server

d-i 	pkgsel/include string openssh-server build-essential curl vim screen ntp less htop ssh open-vm-tools update-motd
d-i 	pkgsel/upgrade select full-upgrade
d-i 	pkgsel/update-policy select none

popularity-contest popularity-contest/participate boolean false

### GRUB
d-i 	grub-installer/bootdev string /dev/sda
d-i 	grub-installer/skip boolean false
d-i 	lilo-installer/skip boolean false
d-i 	grub-installer/only_debian boolean true
d-i 	grub-installer/with_other_os boolean false
#--- re-enabling eth0 interface names for Ubuntu 16 LTS
d-i 	debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0

### Finishing up the installation
# During installations from serial console, the regular virtual consoles
# (VT1-VT6) are normally disabled in /etc/inittab. Uncomment the next
# line to prevent this.
#d-i finish-install/keep-consoles boolean true

# Avoid that last message about the install being complete.
#d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false

# This is how to make the installer shutdown when finished, but not
# reboot into the installed system.
#d-i debian-installer/exit/halt boolean true
# This will power off the machine instead of just halting it.
#d-i debian-installer/exit/poweroff boolean true


#d-i finish-install/keep-consoles boolean true
d-i 	finish-install/reboot_in_progress note
#d-i debian-installer/exit/poweroff boolean true

#### Advanced options
### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh

#d-i preseed/late_command string apt-install vim postfix ufw

d-i 	preseed/late_command string chroot /target sh -c "/usr/bin/curl -o /tmp/postinstall http://192.168.3.25/ubuntu18_post.sh && /bin/sh -x /tmp/postinstall"
